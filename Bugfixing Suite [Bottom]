=begin
#===============================================================================
  RPGM VX Ace - Bugfix Suite [Bottom Segment]
  Author: Compiled by Black Wyvern, Authored by Various Others
  Created: 03/20/16
  Updated: 03/20/16
#===============================================================================
  *** Only for RPG Maker VX Ace. ***
  ------------------------------------------------------------------------------
  To install this script, open up your script editor and copy/paste this script
  to the last open slot above ▼ Main. Remember to save.

  Terms of use:
    1. Give credit where credit is due.
    2. Free to use in any progect.

  Summary of Modules Included
    - Enemy Turn Count Fix
    - Arrow Display Error Fix
    - Custom Movement Event Update
    - Revival and Item Animation Fix
    - Yanfly State Manager Bugfix
    - Plane Rewrite Bugfixes
    - Yanfly Engine Empty Skill Crash Fix

  Description:
    A large collection of bugfixes to the default VXAce Engine I've collected
    and normalized. Each one can be enabled/disabled as you please.
    
    - Enemy Turn Count Fix
      Created by: Lone Wolf
      Edits Classes / Methods:
        BattleManager
          O: self.input_start
          O: self.turn_start

    - Arrow Display Error Fix
      Created by: Mezzolan
      Edits Classes / Methods:
        Window_VictoryLevelUp if using ["YEA-VictoryAftermath"]
          A: draw_arrows

    - Custom Movement Event Update
      Created by: Kread
      Edits Classes / Methods:
        Game_Event
          A: near_the_screen?

    - Revival and Item Animation Fix
      Created by: Yami
      Edits Classes / Methods:
        Sprite_Battler
          A: animation_set_sprites

    - Yanfly State Manager Bugfix if using ["YEA-Buff&StateManager"]
      Created by: Unknown (Please say hi if you want credits.)
      Edits Classes / Methods:
        Game_Battler
          O: add_state

    - Plane Rewrite Bugfixes
      Patched by: Azuma-01
      Edits Classes / Methods:
        Enemy_HP_Gauge_Viewport if using ["YEA-EnemyHPBars"]
          O: create_gauge_sprites
        Enemy_CATB_Gauge_Viewport if using ["YSA-CATB"]
          O: create_gauge_sprites
        Spriteset_Map
          O: update_parallax

    - Yanfly Engine Empty Skill Crash Fix
      Created by: Black Wyvern
      Edits Classes / Methods:
        Game_Actor if using ["YEA-BattleEngine"]
          O: draw_mp?
          O: draw_tp?
    
  Configuration:
    - Script Master
      Fixes can be enabled/disabled as one desires.
  
  Instructions:
    - Custom Movement Event Update
      Place [update] in the event's name to keep it pathing whilst offscreen.

  Optional:
    - None
  
  Dependencies:
    - None
  
  Compatibility:
    - ["YEA-CoreEngine"]
    - ["YEA-BattleEngine"]
    - ["YEA-VictoryAftermath"]
    - ["YEA-EnemyHPBars"]
    - ["YSA-CATB"]

  Credits:
    - Lone Wolf
    - Mezzolan
    - Kread
    - Yami
    - Azuma-01
    - Black Wyvern
#===============================================================================
=end

if true # Turns the script on or off.
  ($imported||={})["BWA_BugFixesBottom"]=[true,1.0]
  # ^ Signifies that the script is installed to other scripts.

#===============================================================================
# Bugfix Collected Vars
#===============================================================================
module BWX_BF
  #=============================================================================
  # ► BEGIN [Script Master Enable]
  #=============================================================================
  BGFX_ETCBF = true   # - Enemy Turn Count Fix
  BGFX_ADEBF = true   # - Arrow Display Error Fix
  BGFX_CMEUF = true   # - Custom Movement Event Update
  BGFX_RAABF = true   # - Revival and Item Animation Fix
  BGFX_YSMBF = true   # - Yanfly State Manager Bugfix
  BGFX_PRWBF = true   # - Plane Rewrite Bugfixes
  BGFX_YFBEF = true   # - Yanfly Engine Empty Skill Crash Fix
  #=============================================================================
  # ► END [Script Master Enable]
  #=============================================================================
end

#===============================================================================
#   ►►► WARNING: YOU PROBABLY SHOULDN'T EDIT ANYTHING BELOW THIS POINT ◄◄◄
#   ►►►  CUZ YEAH, THERE'S NOTHING REALLY CONFIGURABLE, AND IT DOESN'T ◄◄◄
#   ►►►              LIKE IT WHEN YOU TOUCH IT THAT WAY.               ◄◄◄
#===============================================================================

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                     Enemy Turn Count Fix                       ◄◄◄
#===============================================================================
if BWX_BF::BGFX_ETCBF
#===============================================================================
# Battle Manager
#===============================================================================
module BattleManager
  #=============================================================================
  # Input Start [Enemy Turn Count Fix]
  #=============================================================================
  def self.input_start
    if @phase != :input
      @phase = :input
      $game_troop.increase_turn
      $game_party.make_actions
      $game_troop.make_actions
      clear_actor
    end
    return !@surprise && $game_party.inputable?
  end

  #=============================================================================
  # Turn Start [Enemy Turn Count Fix]
  #=============================================================================
  def self.turn_start
    @phase = :turn
    clear_actor
    make_action_orders
    @performed_battlers = [] if $imported["YEA-BattleEngine"]
  end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                   Arrow Display Error Fix                      ◄◄◄
#===============================================================================
if BWX_BF::BGFX_ADEBF
if $imported["YEA-VictoryAftermath"]
#===============================================================================
# Window Victory Level Up
#===============================================================================
  class Window_VictoryLevelUp
  #=============================================================================
  # Draw Arrpows [Arrow Display Error Fix]
  #=============================================================================
    alias bugfix_wvlu_da draw_arrows
    def draw_arrows
      BWX_BF::ARROW_FONT.use(self) do
        bugfix_wvlu_da
      end
    end
  end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                 Custom Movement Event Update                   ◄◄◄
#===============================================================================
if BWX_BF::BGFX_CMEUF
#===============================================================================
# Game Event
#===============================================================================
class Game_Event < Game_Character
  #=============================================================================
  # Alias: Near the Screen? [Custom Movement Event Update]
  #=============================================================================
  alias bugfix_ge_nts? near_the_screen?
  def near_the_screen?(dx = 12, dy = 8)
    dx = dy = nil if $imported && $imported["YEA-CoreEngine"]
    return true if @event.name.include?('[update]')
    return bugfix_ge_nts?(dx, dy)
  end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                Revival and Item Animation Fix                  ◄◄◄
#===============================================================================
if BWX_BF::BGFX_RAABF
#===============================================================================
# Sprite Battler
#===============================================================================
class Sprite_Battler < Sprite_Base
  #=============================================================================
  # Alias: Animation Set Sprites [Revival and Item Animation Fix]
  # - Make Animation Opacity independent of Sprite Opacity
  #=============================================================================
  alias bugfix_sb_ass animation_set_sprites
  def animation_set_sprites(frame)
    bugfix_sb_ass(frame)
    cell_data = frame.cell_data
    @ani_sprites.each_with_index do |sprite, i|
      next unless sprite
      pattern = cell_data[i, 0]
      if !pattern || pattern < 0
        sprite.visible = false
        next
      end
      sprite.opacity = cell_data[i, 6]
    end
  end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                  Yanfly State Manager Bugfix                   ◄◄◄
#===============================================================================
if BWX_BF::BGFX_YSMBF
if $imported["YEA-Buff&StateManager"]
#===============================================================================
# Game Battler
#===============================================================================
  class Game_Battler < Game_BattlerBase
  #=============================================================================
  # Add State [Yanfly State Manager Bugfix]
  #=============================================================================
    def add_state(state_id)
      return if $data_states[state_id].nil?
      state_rules = $data_states[state_id].state_reapply_rules
      return if state_rules == 0 && state?(state_id)
      if state_addable?(state_id)
        add_new_state(state_id) unless state?(state_id)
        reset_state_counts(state_id) if state_rules <= 1
        total_state_counts(state_id) if state_rules == 2
        @result.added_states.push(state_id).uniq!
      end
    end
  end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►                   Plane Rewrite Bugfixes                       ◄◄◄
#===============================================================================
if BWX_BF::BGFX_PRWBF && BWX_BF::BGFX_PLANE
if $imported["YEA-EnemyHPBars"] && Object.const_defined?(:RGSS3Plane)
#===============================================================================
# Enemy HP Gauge Viewport
#===============================================================================
class Enemy_HP_Gauge_Viewport < Viewport
  #=============================================================================
  # Create Gauge Area Sprites [Plane Rewrite Bugfixes]
  #=============================================================================
  def create_gauge_sprites
    @sprite = RGSS3Plane.new(self)
    dw = self.rect.width * 2
    bmp=Bitmap.new(dw, self.rect.height)
    case @type
    when :back
      colour1 = Colour.text_colour(@battler.enemy.back_gauge_colour)
      colour2 = Colour.text_colour(@battler.enemy.back_gauge_colour)
    when :hp 
      colour1 = Colour.text_colour(@battler.enemy.hp_gauge_colour1)
      colour2 = Colour.text_colour(@battler.enemy.hp_gauge_colour2)
    end
    dx = 0
    dy = 0
    dw = self.rect.width
    dh = self.rect.height
    self.rect.width = target_gauge_width unless @type == :back
    @gauge_width = target_gauge_width
    bmp.gradient_fill_rect(dx, dy, dw, dh, colour1, colour2)
    bmp.gradient_fill_rect(dw, dy, dw, dh, colour2, colour1)
    @visible_counter = 0
    @sprite.bitmap = bmp
  end
end
end

if $imported["YSA-CATB"] && Object.const_defined?(:RGSS3Plane)
#===============================================================================
# Enemy CATB Gauge Viewport
#===============================================================================
class Enemy_CATB_Gauge_Viewport < Viewport
  #=============================================================================
  # Create Gauge Area Sprites [Plane Rewrite Bugfixes]
  #=============================================================================
  def create_gauge_sprites
    @sprite = RGSS3Plane.new(self)
    dw = self.rect.width * 2
    @sprite.bitmap = Bitmap.new(dw, self.rect.height)
    case @type
    when :back
      colour1 = Colour.text_colour(YSA::CATB::ENEMY_BACKGAUGE_COLOUR)
      colour2 = Colour.text_colour(YSA::CATB::ENEMY_BACKGAUGE_COLOUR)
    when :catb
      colour1 = Colour.text_colour(YSA::CATB::ENEMY_ATB_GAUGE_COLOUR1)
      colour2 = Colour.text_colour(YSA::CATB::ENEMY_ATB_GAUGE_COLOUR2)
    when :catbct
      colour1 = Colour.text_colour(YSA::CATB::CHARGE_COLOR1)
      colour2 = Colour.text_colour(YSA::CATB::CHARGE_COLOR2)
    end
    dx = 0
    dy = 0
    dw = self.rect.width
    dh = self.rect.height
    self.rect.width = target_gauge_width unless @type == :back
    @gauge_width = target_gauge_width
    @sprite.bitmap.gradient_fill_rect(dx, dy, dw, dh, colour1, colour2)
    @sprite.bitmap.gradient_fill_rect(dw, dy, dw, dh, colour2, colour1)
  end
end
end
end

#===============================================================================
#   ►►►                      BEGIN NEW SEGMENT                         ◄◄◄
#   ►►►               Yanfly Engine Empty Skill Crash Fix              ◄◄◄
#===============================================================================
if BWX_BF::BGFX_YFBEF
if $imported["YEA-BattleEngine"]
#===============================================================================
# Game Actor
#===============================================================================
class Game_Actor < Game_Battler
  #=============================================================================
  # Draw Mp? [Yanfly Engine Empty Skill Crash Fix]
  # -- Fixes instances where would crash when you have empty skills learned.
  # -- Also improves logic for drawing MP Gauge
  #=============================================================================
  def draw_mp?
    return true unless draw_tp?
    for skill in skills
      next unless skill != nil
      next unless added_skill_types.include?(skill.stype_id)
      if skill.mp_cost > 0
        return true if self.mmp > 0
      end
    end
    return false
  end

  #=============================================================================
  # Draw Tp? [Yanfly Engine Empty Skill Crash Fix]
  # -- Fixes instances where would crash when you have empty skills learned.
  #=============================================================================
  def draw_tp?
    return false unless $data_system.opt_display_tp
    for skill in skills
      next unless skill != nil
      next unless added_skill_types.include?(skill.stype_id)
      if skill.tp_cost > 0
        return true if self.max_tp > 0
      end
    end
    return false
  end
end
end
end
#===============================================================================
# EOF
#===============================================================================
end # End Activation Handler
