=begin
#===============================================================================
  Black Wyvern Arts - RPGMaker-X Core Colorspace
  Author: Black Wyvern
  Created: 09/21/16
  Updated: 03/21/16
  Version: 1.0
#===============================================================================
  *** Only for RPG Maker VX Ace. ***
  ------------------------------------------------------------------------------
  To install this script, open up your script editor and copy/paste this script
  to an open slot below ▼ Materials but above ▼ Main. Remember to save.
  
  Terms of use:
    1. Give credit where credit is due.
    2. You may use my code in anything you like. Commercial, non-commercial.
    3. If you edit my code in any way, please link back to the original source.
    4. Support is always appreciated in form of gold, sacrificial virgins,
        large quantaties of bacon (or other cooked meats), or free games.
          I can be contacted at LuneTheWyvern@Gmail.com

  Description:
    - Converts the default 32-color palette into a 256-color palette
  
  Configuration:
    - None
  
  Instructions: Plug 'n' Play
    This needs to be located above any other RPGM-X scripts that depend on it.
    Order:
      Core System
      Debugging
      Colorspace
      -Others-

  Optional:
    - None
  
  Dependencies:
    - None
  
  Compatability:
    - None

  Credits:
    - None
#===============================================================================
=end

active = true # Turns the script on or off.
if (!$Global_Enable.nil? && active) || ($Global_Enable && active)
  ($imported||={})["RPGM-X_Colorspace"]=[true,1.0]
  # ^ Signifies that the script is installed to other scripts.

module BWX
  module Colors
    COLORSPACE = "Colorspace" # Filename of the Colorspace Image
                              # (Place in Graphics/System)

#===============================================================================
#   ►►► WARNING: YOU PROBABLY SHOULDN'T EDIT ANYTHING BELOW THIS POINT ◄◄◄
#   ►►►  CUZ YEAH, THERE'S NOTHING REALLY CONFIGURABLE, AND IT DOESN'T ◄◄◄
#   ►►►              LIKE IT WHEN YOU TOUCH IT THAT WAY.               ◄◄◄
#===============================================================================

    #===========================================================================
    # BWX Color Settings
    #===========================================================================
    COLORTABLE = {
      :normal     =>  0,    :param_atk1 => 16,    :hp_full_l  => 32,
      :system     =>  1,    :param_atk2 => 17,    :hp_full_r  => 33,
      :crisis     =>  2,    :param_def1 => 18,    :hp_empt_l  => 34,
      :knockout   =>  3,    :param_def2 => 19,    :hp_empt_r  => 35,
      :mp_cost    =>  4,    :param_mat1 => 20,    :mp_full_l  => 36,
      :tp_cost    =>  5,    :param_mat2 => 21,    :mp_full_r  => 37,
      :wp_cost    =>  6,    :param_mdf1 => 22,    :mp_empt_l  => 38,
      :vc_cost    =>  7,    :param_mfd2 => 23,    :mp_empt_r  => 39,
      :lf_cost    =>  8,    :param_agi1 => 24,    :tp_full_l  => 40,
      :dv_cost    =>  9,    :param_agi2 => 25,    :tp_full_r  => 41,
      :power_up   => 10,    :param_luk1 => 26,    :tp_empt_l  => 42,
      :power_down => 11,    :param_luk2 => 27,    :tp_empt_r  => 43,
      :gauge_back => 12,    :param_dex1 => 28,    :wp_full_l  => 44,
      :sg_bordr1  => 13,    :param_dex2 => 29,    :wp_full_r  => 45,
      :sg_bordr2  => 14,    :param_foc1 => 30,    :wp_empt_l  => 46,
      :sg_gback2  => 15,    :param_foc2 => 31,    :wp_empt_r  => 47,

      :vc_full_l  => 48,    :sub_full_l => 64,
      :vc_full_r  => 49,    :sub_full_r => 65,
      :vc_empt_l  => 50,    :sub_empt_l => 66,
      :vc_empt_r  => 51,    :sub_empt_l => 67,
      :lf_full_l  => 52,    :exp_full_l => 68,
      :lf_full_r  => 53,    :exp_full_r => 69,
      :lf_empt_l  => 54,    :exp_empt_l => 70,
      :lf_empt_r  => 55,    :exp_empt_r => 71,
      :dv_full_l  => 56,    :mhpb_mhf_l => 72,
      :dv_full_r  => 57,    :mhpb_mhf_r => 73,
      :dv_empt_l  => 58,    :mhpb_mhe_l => 74,
      :dv_empt_r  => 59,    :mhpb_mhe_r => 75,
      :sp_full_l  => 60,    :mhpb_bhf_l => 76,
      :sp_full_r  => 61,    :mhpb_bhf_r => 77,
      :sp_empt_l  => 62,    :mhpb_bhe_l => 78,
      :sp_empt_r  => 63,    :mhpb_bhe_r => 79,
    }
  end
end

#===============================================================================
# Window Base
# -- Color Definitions
# -- Windowskin Control
# -- KilloZapit's Wordwrap (Refer to #KZ Word Wrap)
#===============================================================================
class Window_Base < Window
  #=============================================================================
  # Color Definitions
  #=============================================================================
  def normal_color;     text_color(BWX::Colors::COLORTABLE[:normal]);     end;
  def system_color;     text_color(BWX::Colors::COLORTABLE[:system]);     end;
  def crisis_color;     text_color(BWX::Colors::COLORTABLE[:crisis]);     end;
  def knockout_color;   text_color(BWX::Colors::COLORTABLE[:knockout]);   end;
  def hp_cost_color;    text_color(BWX::Colors::COLORTABLE[:hp_full_r]);  end;
  def mp_cost_color;    text_color(BWX::Colors::COLORTABLE[:mp_cost]);    end;
  def tp_cost_color;    text_color(BWX::Colors::COLORTABLE[:tp_cost]);    end;
  def wp_cost_color;    text_color(BWX::Colors::COLORTABLE[:wp_cost]);    end;
  def vc_cost_color;    text_color(BWX::Colors::COLORTABLE[:vc_cost]);    end;
  def lf_cost_color;    text_color(BWX::Colors::COLORTABLE[:lf_cost]);    end;
  def dv_cost_color;    text_color(BWX::Colors::COLORTABLE[:dv_cost]);    end;
  def power_up_color;   text_color(BWX::Colors::COLORTABLE[:power_up]);   end;
  def power_down_color; text_color(BWX::Colors::COLORTABLE[:power_down]); end;
  def gauge_back_color; text_color(BWX::Colors::COLORTABLE[:gauge_back]); end;
  def gauge_border_1;   text_color(BWX::Colors::COLORTABLE[:sg_bordr1]);  end;
  def gauge_border_2;   text_color(BWX::Colors::COLORTABLE[:sg_gback2]);  end;
  def gauge_back_sgalt; text_color(BWX::Colors::COLORTABLE[:sg_gback2]);  end;
  
  def param_atk_col1;   text_color(BWX::Colors::COLORTABLE[:param_atk1]); end;
  def param_atk_col2;   text_color(BWX::Colors::COLORTABLE[:param_atk2]); end;
  def param_def_col1;   text_color(BWX::Colors::COLORTABLE[:param_def1]); end;
  def param_def_col2;   text_color(BWX::Colors::COLORTABLE[:param_def2]); end;
  def param_mat_col1;   text_color(BWX::Colors::COLORTABLE[:param_mat1]); end;
  def param_mat_col2;   text_color(BWX::Colors::COLORTABLE[:param_mat2]); end;
  def param_mdf_col1;   text_color(BWX::Colors::COLORTABLE[:param_mdf1]); end;
  def param_mdf_col2;   text_color(BWX::Colors::COLORTABLE[:param_mdf2]); end;
  def param_agi_col1;   text_color(BWX::Colors::COLORTABLE[:param_agi1]); end;
  def param_agi_col2;   text_color(BWX::Colors::COLORTABLE[:param_agi2]); end;
  def param_luk_col1;   text_color(BWX::Colors::COLORTABLE[:param_luk1]); end;
  def param_luk_col2;   text_color(BWX::Colors::COLORTABLE[:param_luk2]); end;
  def param_dex_col1;   text_color(BWX::Colors::COLORTABLE[:param_dex1]); end;
  def param_dex_col2;   text_color(BWX::Colors::COLORTABLE[:param_dex2]); end;
  def param_foc_col1;   text_color(BWX::Colors::COLORTABLE[:param_foc1]); end;
  def param_foc_col2;   text_color(BWX::Colors::COLORTABLE[:param_foc2]); end;
  
  def hp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:hp_full_l]);  end;
  def hp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:hp_full_r]);  end;
  def hp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:hp_empt_l]);  end;
  def hp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:hp_empt_r]);  end;
  def mp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:mp_full_l]);  end;
  def mp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:mp_full_r]);  end;
  def mp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:mp_empt_l]);  end;
  def mp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:mp_empt_r]);  end;
  def tp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:tp_full_l]);  end;
  def tp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:tp_full_r]);  end;
  def tp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:tp_empt_l]);  end;
  def tp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:tp_empt_r]);  end;
  def wp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:wp_gauge1]);  end;
  def wp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:wp_gauge2]);  end;
  def wp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:wp_empt_l]);  end;
  def wp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:wp_empt_r]);  end;
  
  def vc_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:vc_full_l]);  end;
  def vc_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:vc_full_r]);  end;
  def vc_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:vc_empt_l]);  end;
  def vc_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:vc_empt_r]);  end;
  def lf_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:lf_full_l]);  end;
  def lf_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:lf_full_r]);  end;
  def lf_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:lf_empt_l]);  end;
  def lf_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:lf_empt_r]);  end;
  def dv_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:dv_full_l]);  end;
  def dv_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:dv_full_2]);  end;
  def dv_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:dv_empt_l]);  end;
  def dv_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:dv_empt_r]);  end;
  def sp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:sp_full_1]);  end;
  def sp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:sp_full_2]);  end;
  def sp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:sp_empt_l]);  end;
  def sp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:sp_empt_r]);  end;
  
  def subparam_color1;  text_color(BWX::Colors::COLORTABLE[:sub_full_l]); end;
  def subparam_color2;  text_color(BWX::Colors::COLORTABLE[:sub_full_r]); end;
  def subparam_color3;  text_color(BWX::Colors::COLORTABLE[:sub_empt_r]); end;
  def subparam_color4;  text_color(BWX::Colors::COLORTABLE[:sub_empt_l]); end;
  def xp_gauge_color1;  text_color(BWX::Colors::COLORTABLE[:exp_full_l]); end;
  def xp_gauge_color2;  text_color(BWX::Colors::COLORTABLE[:exp_full_r]); end;
  def xp_gauge_color3;  text_color(BWX::Colors::COLORTABLE[:exp_empt_l]); end;
  def xp_gauge_color4;  text_color(BWX::Colors::COLORTABLE[:exp_empt_r]); end;
    
  #=============================================================================
  # Get BWX Text Color
  #=============================================================================
  def text_color(n)
    row = (n / 16).to_i; col = (n % 16); off = [0,0]
    case row
      when 0 || 4 ||  8 || 12;  col.even? ? off = [0,0] : off = [3,0]
      when 1 || 5 ||  9 || 13;  col.even? ? off = [3,3] : off = [0,3]
      when 2 || 6 || 10 || 14;  col.even? ? off = [0,3] : off = [0,0]
      when 3 || 7 || 11 || 15;  col.even? ? off = [0,3] : off = [3,3]
    end
    Cache.system(BWX::Colors::COLORSPACE).get_pixel(
      (col*4)+off[0],(((row/2).floor)*4)+off[1])
  end
end
#===============================================================================
# EOF
#===============================================================================
end # End Activation Handler
